name: Check-Build

on: [push]

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: ['7.0.x' ]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
          
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NuGetAPIKey }}
          nuget-version: latest

      - name: Setup Oculus
        shell: pwsh
        run: |
          $(New-Object System.Net.WebClient).DownloadFile("https://securecdn.oculus.com/binaries/download/?id=4377593722298679&access_token=OC%7C1592049031074901%7C", "OVRSDK.zip")
          Expand-Archive -Path ./OVRSDK.zip -DestinationPath ./external/OVRSDK

      - name: Prepare WinRT projection files
        run: |
          nuget restore
          msbuild DeviceHandler /restore /p:Platform=x64 /p:PlatformTarget=x64 /p:Configuration=Release /p:RuntimeIdentifier=win-x64 /t:Rebuild
        
      - name: Restore and build (publish)
        run: msbuild plugin_TouchLink /restore /p:Platform=x64 /p:PlatformTarget=x64 /p:Configuration=Release /p:RuntimeIdentifier=win-x64 /t:Publish /p:PublishProfile=plugin_TouchLink\Properties\PublishProfiles\FolderProfile.pubxml
        
      - name: Pack published files
        run: |
          cd plugin_TouchLink/bin/Release/net8.0/win-x64/publish
          7z a plugin_TouchLink.zip *
        
      - name: Upload plugin artifact
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "plugin_TouchLink Build Artifact"
          files: |
            ./plugin_TouchLink/bin/Release/net8.0/win-x64/publish/plugin_TouchLink.zip
            ./external/manifest.json